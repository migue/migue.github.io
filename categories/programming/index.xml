<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on Just my thoughts</title>
    <link>https://migue.github.com/categories/programming/</link>
    <description>Recent content in programming on Just my thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Mon, 21 Apr 2014 22:29:06 +0100</lastBuildDate>
    
	<atom:link href="https://migue.github.com/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java Compiler String Addition</title>
      <link>https://migue.github.com/post/java-compiler-string-addition/</link>
      <pubDate>Mon, 21 Apr 2014 22:29:06 +0100</pubDate>
      
      <guid>https://migue.github.com/post/java-compiler-string-addition/</guid>
      <description>Lately I have seen quite a few misconceptions regarding how string concatenation is handled in the Java world so I would like to write this short blog entry with a couple of stupid examples in order to show the basics of how it is done.
Note: I am focusing here in the bytecode generated by the Java compiler, regardless any optimization the runtime could apply.
Concatenating constant strings Imagine we are writing a new class where we have defined three final string fields and we want to add a new method which just returns the sum of the three:</description>
    </item>
    
  </channel>
</rss>